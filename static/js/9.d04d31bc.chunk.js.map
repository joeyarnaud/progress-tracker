{"version":3,"sources":["components/common/styled-components/text.js","components/common/styled-components/container.js","components/common/styled-components/button.js","components/auth/common.js","components/auth/FormLabel.js","components/auth/InputEmail.js","assets/landing.jpeg","components/auth/InputPassword.js","pages/Landing.js"],"names":["Title1","styled","h1","props","theme","fontStyles","boldest","colors","colorWhite","Title2","h2","Title4","colorDark","FlexBoxBetween","div","FlexBox","FlexBoxCenter","TitleContainer","AdderButton","Link","colorSuccess","ErrorText","p","colorDanger","LandingContainer","landing","OverlayContainer","CenteredContainer","SubmitButton","Button","Center","Text","Label","Form","FormLabel","text","InputEmail","handleChange","value","error","Group","variant","htmlFor","Control","name","type","placeholder","size","onChange","e","module","exports","InputPassword","connect","state","token","auth","tokenInfo","setCurrentUser","isEmpty","className","initialValues","email","password","validate","values","errors","onSubmit","setSubmitting","setTimeout","axios","post","process","then","res","data","catch","err","handleSubmit","isSubmitting","onClick","disabled","to"],"mappings":"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","file":"static/js/9.d04d31bc.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Title1 = styled.h1`\n  font-size: 4rem;\n  font-family: ${(props) => props.theme.fontStyles.boldest};\n  text-align: center;\n  color: ${(props) => props.theme.colors.colorWhite};\n`;\n\nexport const Title2 = styled.h2`\n  font-size: 3.5rem;\n  font-family: ${(props) => props.theme.fontStyles.boldest};\n`;\n\nexport const Title4 = styled.h2`\n  color: ${(props) => props.theme.colors.colorDark};\n  margin-top: 2rem;\n  font-size: 2rem;\n`;\n","import styled from 'styled-components';\n\nexport const FlexBoxBetween = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\n\nexport const FlexBox = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const FlexBoxCenter = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin: 2rem 0;\n`;\n\nexport const PerfectCenter = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const AdderButton = styled(Link)`\n  color: ${(props) => props.theme.colors.colorSuccess};\n  font-size: 3.5rem;\n`;\n","import styled from 'styled-components';\nimport { Button } from 'react-bootstrap';\nimport landing from '../../assets/landing.jpeg';\nimport { Link } from 'react-router-dom';\n\nexport const ErrorText = styled.p`\n  font-size: 1.4rem;\n  color: ${(props) => props.theme.colors.colorDanger};\n`;\n\nexport const LandingContainer = styled.div`\n  background: url(${landing}) no-repeat;\n  background-size: 100% 100%;\n  height: 100vh;\n`;\n\nexport const OverlayContainer = styled.div`\n  background-color: rgba(0, 0, 0, 0.3);\n  height: 100%;\n  width: 100%;\n`;\n\nexport const CenteredContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.6);\n  padding: 2rem;\n  border-radius: 10px;\n  min-width: 50rem;\n`;\n\nexport const SubmitButton = styled(Button)`\n  font-size: 2rem;\n  padding: 0.5rem 4rem;\n`;\n\nexport const Center = styled.div`\n  text-align: center;\n  margin: 2rem 0;\n`;\n\nexport const Text = styled(Link)`\n  color: ${(props) => props.theme.colors.colorWhite};\n  font-size: 1.6rem;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Form } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst Label = styled(Form.Label)`\n  color: ${(props) => props.theme.colors.colorWhite};\n  font-size: 1.6rem;\n`;\n\nfunction FormLabel(props) {\n  const { text } = props;\n  return <Label>{text}</Label>;\n}\n\nFormLabel.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default FormLabel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap';\nimport Label from './FormLabel';\nimport { ErrorText } from './common';\n\nfunction InputEmail(props) {\n  const { handleChange, value, error } = props;\n  return (\n    <Form.Group>\n      <Label variant='light' text='Email' htmlFor='email' />\n      <Form.Control\n        name='email'\n        type='email'\n        placeholder='Email'\n        size='lg'\n        onChange={(e) => handleChange(e)}\n        value={value}\n      />\n      <ErrorText>{error}</ErrorText>\n    </Form.Group>\n  );\n}\n\nInputEmail.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  error: PropTypes.string,\n};\n\nexport default InputEmail;\n","module.exports = __webpack_public_path__ + \"static/media/landing.965798a0.jpeg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap';\nimport Label from './FormLabel';\nimport { ErrorText } from './common';\n\nfunction InputPassword(props) {\n  const { text, name, handleChange, value, error } = props;\n\n  return (\n    <Form.Group>\n      <Label variant='light' text={text} />\n      <Form.Control\n        name={name}\n        value={value}\n        onChange={(e) => handleChange(e)}\n        type='password'\n        placeholder='Password'\n        size='lg'\n      />\n      <ErrorText>{error}</ErrorText>\n    </Form.Group>\n  );\n}\n\nInputPassword.propTypes = {\n  text: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n};\n\nexport default InputPassword;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport InputEmail from 'components/auth/InputEmail';\nimport InputPassword from 'components/auth/InputPassword';\nimport {\n  LandingContainer,\n  OverlayContainer,\n  CenteredContainer,\n  SubmitButton,\n  Center,\n  Text,\n} from 'components/auth/common';\nimport { Title1 } from 'components/common/styled-components';\nimport { setCurrentUser } from 'actions';\nimport { isEmpty } from 'helpers';\n\nconst Landing = (props) => {\n  const { token } = props;\n  return isEmpty(token) ? (\n    <LandingContainer>\n      <OverlayContainer>\n        <CenteredContainer>\n          <Title1>\n            Progress Tracker <i className='fas fa-chart-line'></i>\n          </Title1>\n          <Formik\n            initialValues={{ email: '', password: '' }}\n            validate={(values) => {\n              const errors = {};\n              if (!values.email) {\n                errors.email = 'Required';\n              } else if (!values.password) {\n                errors.password = 'Required';\n              }\n\n              return errors;\n            }}\n            onSubmit={(values, { setSubmitting }) => {\n              setTimeout(() => {\n                setSubmitting(false);\n              }, 2000);\n\n              axios\n                .post(`${process.env.REACT_APP_URL_API}/auth/login`, {\n                  email: values.email,\n                  password: values.password,\n                })\n                .then((res) => {\n                  props.setCurrentUser(res.data);\n                })\n                .catch((err) => {});\n            }}\n          >\n            {({ values, errors, handleChange, handleSubmit, isSubmitting }) => (\n              <Form onSubmit={handleSubmit}>\n                <InputEmail\n                  handleChange={handleChange}\n                  value={values.email}\n                  error={errors.email}\n                />\n                <InputPassword\n                  handleChange={handleChange}\n                  text='Password'\n                  name='password'\n                  value={values.password}\n                  error={errors.password}\n                />\n                <Center>\n                  <SubmitButton\n                    onClick={handleSubmit}\n                    disabled={isSubmitting}\n                    variant='success'\n                    type='submit'\n                  >\n                    Sign In\n                  </SubmitButton>\n                </Center>\n                <Center>\n                  <Text to='/register'>Don't have an account?</Text>\n                </Center>\n              </Form>\n            )}\n          </Formik>\n        </CenteredContainer>\n      </OverlayContainer>\n    </LandingContainer>\n  ) : (\n    <Redirect to='/dashboard' />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  token: state.auth.tokenInfo,\n});\n\nLanding.propTypes = {\n  token: PropTypes.object.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, { setCurrentUser })(Landing);\n"],"sourceRoot":""}