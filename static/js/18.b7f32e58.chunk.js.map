{"version":3,"sources":["components/quick-start/common.js","components/quick-start/InfoSlide.js","components/quick-start/ExerciseSlide.js","components/quick-start/ExerciseSlideView.js","components/quick-start/ExerciseSlidePlay.js","components/quick-start/WorkoutFinished.js","pages/QuickStartWorkout.js"],"names":["QSContainer","styled","div","props","theme","colors","colorDark","StartContainer","colorPrimaryLight","colorWhite","StartButton","Button","InfoPageContainer","Container","InfoImportant","h2","ButtonContainer","p","InfoContainer","Title","h1","OptionsContainer","OptionButton","Link","ExerciseInputText","TitleText","TitleContainer","Form","Group","TitleLabel","Label","TitleError","colorDanger","FormControl","Control","InfoSlide","startWorkout","workoutName","changeWorkoutName","error","workouts","value","onChange","placeholder","name","isEmpty","variant","onClick","href","style","marginTop","map","workout","date","exercises","id","_id","quickstart","key","reducer","state","action","type","payload","match","weight","reps","sets","ExerciseSlide","console","log","useReducer","dispatch","e","target","width","top","textAlign","borderBottom","paddingBottom","size","disabled","submitExercise","SeparatedExerciseContainer","ExerciseInputContainer","SeparatedTitleContainer","ExerciseSlideView","ExerciseSlidePlay","InfoTitle","InfoText","WorkoutFinishedButton","WorkoutFinished","to","as","QuickStartWorkout","currentExercise","handleStandardChange","setState","addExercise","params","exercise","qs","parse","this","location","search","getWorkout","Number","nextProps","nextState","submitted","history","push","length","ex","index","inputs","submitWorkout","marginBottom","fontSize","padding","Component","connect","workout_id"],"mappings":"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","file":"static/js/18.b7f32e58.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Button, Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nexport const QSContainer = styled.div`\n  background-color: ${(props) => props.theme.colors.colorDark};\n  border-radius: 10px;\n  margin: 0 2rem;\n  padding: 2rem;\n`;\n\nexport const StartContainer = styled.div`\n  background-color: ${(props) => props.theme.colors.colorPrimaryLight};\n  color: ${(props) => props.theme.colors.colorWhite};\n  width: 100%;\n  height: calc(100vh - 5.4rem);\n  margin-top: 10vh;\n`;\n\nexport const StartButton = styled(Button)`\n  font-size: 1.6rem;\n  margin-right: 1rem;\n  width: 20rem;\n`;\n\nexport const InfoPageContainer = styled(Container)`\n  padding: 2rem;\n  text-align: center;\n`;\n\nexport const InfoImportant = styled.h2`\n  font-size: 2rem;\n  margin-bottom: 2rem;\n`;\n\nexport const InfoFurther = styled.p`\n  font-size: 1.6rem;\n  margin: 0 5%;\n  margin-bottom: 2rem;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nexport const InfoContainer = styled.div`\n  /* background-color: ${(props) => props.theme.colors.colorDark};\n  border-radius: 10px; */\n`;\n\nexport const Title = styled.h1`\n  color: ${(props) => props.theme.colors.colorWhite};\n  font-size: 2.5rem;\n  text-align: center;\n  padding-top: 2rem;\n`;\n\nexport const OptionsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 2rem;\n`;\n\nexport const OptionButton = styled(Link)`\n  width: 8rem;\n  font-size: 1.2rem;\n  /* margin-right: 1rem; */\n  margin-bottom: 1rem;\n`;\n\nexport const ExerciseInputText = styled.p`\n  font-size: 1.6rem;\n`;\n\nexport const TitleText = styled.p`\n  font-size: 1.6rem;\n`;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport {\n  StartButton,\n  InfoPageContainer,\n  InfoContainer,\n  ButtonContainer,\n  InfoImportant,\n} from 'components/quick-start';\nimport { WorkoutSummary } from 'components/common/summary';\nimport { isEmpty } from 'helpers';\n\nconst TitleContainer = styled(Form.Group)`\n  text-align: left;\n`;\n\nconst TitleLabel = styled(Form.Label)`\n  font-size: 2rem;\n`;\n\nconst TitleError = styled.p`\n  font-size: 2rem;\n  color: ${(props) => props.theme.colors.colorDanger};\n`;\n\nconst FormControl = styled(Form.Control)`\n  font-size: 2rem;\n`;\n\nfunction InfoSlide(props) {\n  const {\n    startWorkout,\n    workoutName,\n    changeWorkoutName,\n    error,\n    workouts,\n  } = props;\n  return (\n    <InfoPageContainer>\n      <InfoContainer>\n        <InfoImportant>Quick Start Workout</InfoImportant>\n        <TitleContainer>\n          <TitleLabel>Workout Name *</TitleLabel>\n          <FormControl\n            value={workoutName}\n            onChange={changeWorkoutName}\n            placeholder='workout name'\n            name='workoutName'\n          />\n          {!isEmpty(error.workoutName) && (\n            <TitleError>{error.workoutName}</TitleError>\n          )}\n        </TitleContainer>\n      </InfoContainer>\n      <ButtonContainer>\n        <StartButton variant='success' onClick={() => startWorkout()}>\n          Start Workout\n        </StartButton>\n        <StartButton variant='info' href='/dashboard'>\n          Back To Dashboard\n        </StartButton>\n      </ButtonContainer>\n      <InfoContainer style={{ marginTop: '4rem' }}>\n        <InfoImportant>Unsubmitted Workouts</InfoImportant>\n        {!isEmpty(workouts) &&\n          workouts.map((workout) => {\n            return (\n              <WorkoutSummary\n                date={workout.date}\n                exercises={workout.exercises}\n                name={workout.name}\n                id={workout._id}\n                quickstart={true}\n                key={'workout' + workout._id}\n              />\n            );\n          })}\n      </InfoContainer>\n    </InfoPageContainer>\n  );\n}\n\nexport { InfoSlide };\n","import React, { useReducer } from 'react';\nimport { Button, Container } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { isEmpty } from 'helpers';\nimport {\n  ExerciseContainer,\n  TitleContainer,\n  TitleLabel,\n  TitleInput,\n  ExerciseInputContainer,\n  ExerciseInput,\n  ExerciseInputLabel,\n  Select,\n  MarginRight,\n} from 'components/workouts/add-workout';\nimport { InfoContainer } from 'components/quick-start';\n\nconst TITLE_INPUT = 'TITLE_INPUT';\nconst WEIGHT_INPUT = 'WEIGHT_INPUT';\nconst REP_INPUT = 'REP_INPUT';\nconst SET_INPUT = 'SET_INPUT';\nconst SET_WEIGHT_TYPE = 'SET_WEIGHT_TYPE';\nconst CLEAR = 'CLEAR';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case TITLE_INPUT:\n      return { ...state, name: action.payload };\n    case WEIGHT_INPUT:\n      if (action.payload.match(/[^0-9]/g)) {\n        return state;\n      }\n      return { ...state, weight: action.payload };\n    case REP_INPUT:\n      if (action.payload.match(/[^0-9]/g)) {\n        return state;\n      }\n      return { ...state, reps: action.payload };\n    case SET_INPUT:\n      if (action.payload.match(/[^0-9]/g)) {\n        return state;\n      }\n      return { ...state, sets: action.payload };\n    case SET_WEIGHT_TYPE:\n      return { ...state, type: action.payload };\n    case CLEAR:\n      return { name: '', weight: '', reps: '', sets: '', type: 'kg' };\n    default:\n      return state;\n  }\n};\n\nfunction ExerciseSlide(props) {\n  console.log(props);\n  const [state, dispatch] = useReducer(reducer, {\n    name: props.name,\n    weight: props.weight,\n    reps: props.reps,\n    sets: props.sets,\n    type: props.type,\n  });\n  const { name, weight, reps, sets, type } = state;\n\n  return (\n    <InfoContainer>\n      <Container>\n        <TitleContainer>\n          <TitleLabel>Exercise Name *required</TitleLabel>\n          <TitleInput\n            type='text'\n            placeholder='Exercise Name'\n            value={name}\n            onChange={(e) => {\n              return dispatch({\n                type: TITLE_INPUT,\n                payload: e.target.value,\n              });\n            }}\n          />\n        </TitleContainer>\n        <ExerciseContainer>\n          <ExerciseInputContainer style={{ width: '100%' }}>\n            <ExerciseInputLabel>Weight</ExerciseInputLabel>\n            <ExerciseInput\n              type='text'\n              placeholder='weight'\n              value={weight}\n              onChange={(e) =>\n                dispatch({ type: WEIGHT_INPUT, payload: e.target.value })\n              }\n              style={{ width: '100%' }}\n            />\n            <Select\n              value={type}\n              onChange={(e) =>\n                dispatch({ type: SET_WEIGHT_TYPE, payload: e.target.value })\n              }\n              style={{ top: '2.6rem' }}\n            >\n              <option value='kg'>kg</option>\n              <option value='lb'>lb</option>\n              <option value='na'>N/A</option>\n            </Select>\n          </ExerciseInputContainer>\n          <ExerciseInputContainer style={{ width: '100%' }}>\n            <ExerciseInputLabel>Reps</ExerciseInputLabel>\n            <ExerciseInput\n              type='text'\n              placeholder='reps'\n              value={reps}\n              onChange={(e) =>\n                dispatch({ type: REP_INPUT, payload: e.target.value })\n              }\n              style={{ width: '100%' }}\n            />\n          </ExerciseInputContainer>\n          <ExerciseInputContainer style={{ width: '100%' }}>\n            <ExerciseInputLabel>Sets *required</ExerciseInputLabel>\n            <ExerciseInput\n              type='text'\n              placeholder='sets'\n              value={sets}\n              onChange={(e) =>\n                dispatch({ type: SET_INPUT, payload: e.target.value })\n              }\n              style={{ width: '100%' }}\n            />\n          </ExerciseInputContainer>\n        </ExerciseContainer>\n        <div\n          style={{\n            textAlign: 'center',\n            borderBottom: '1px solid white',\n            paddingBottom: '2rem',\n          }}\n        >\n          <Button\n            variant='success'\n            size='lg'\n            disabled={isEmpty(name) || isEmpty(sets)}\n            onClick={() => {\n              props.submitExercise(name, weight, reps, sets, type);\n              dispatch({ type: CLEAR });\n            }}\n          >\n            Submit Exercise\n          </Button>\n        </div>\n      </Container>\n    </InfoContainer>\n  );\n}\n\nexport { ExerciseSlide };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport {\n  ExerciseContainer,\n  TitleContainer,\n  TitleLabel,\n  ExerciseInputContainer,\n  ExerciseInputLabel,\n} from 'components/workouts/add-workout';\nimport { ExerciseInputText, TitleText } from './common';\n\nconst InfoContainer = styled.div`\n  padding-top: 2rem;\n`;\n\nconst SeparatedExerciseContainer = styled(ExerciseInputContainer)`\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid ${(props) => props.theme.colors.colorWhite};\n`;\n\nconst SeparatedTitleContainer = styled(TitleContainer)`\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid ${(props) => props.theme.colors.colorWhite};\n`;\n\nfunction ExerciseSlideView(props) {\n  const { name, weight, reps, sets, type } = props;\n\n  return (\n    <InfoContainer>\n      <Container>\n        <SeparatedTitleContainer>\n          <TitleLabel>Name:</TitleLabel>\n          <TitleText>{name}</TitleText>\n        </SeparatedTitleContainer>\n        <ExerciseContainer>\n          <SeparatedExerciseContainer style={{ width: '100%' }}>\n            <ExerciseInputLabel>Weight:</ExerciseInputLabel>\n            <ExerciseInputText>\n              {weight}\n              {type}\n            </ExerciseInputText>\n          </SeparatedExerciseContainer>\n          <SeparatedExerciseContainer style={{ width: '100%' }}>\n            <ExerciseInputLabel>Reps:</ExerciseInputLabel>\n            <ExerciseInputText>{reps}</ExerciseInputText>\n          </SeparatedExerciseContainer>\n          <SeparatedExerciseContainer style={{ width: '100%' }}>\n            <ExerciseInputLabel>Sets:</ExerciseInputLabel>\n            <ExerciseInputText>{sets}</ExerciseInputText>\n          </SeparatedExerciseContainer>\n        </ExerciseContainer>\n      </Container>\n    </InfoContainer>\n  );\n}\n\nExerciseSlideView.propTypes = {\n  name: PropTypes.string.isRequired,\n  weight: PropTypes.number.isRequired,\n  reps: PropTypes.number.isRequired,\n  sets: PropTypes.number.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport { ExerciseSlideView };\n","import React, { useReducer } from 'react';\nimport { Button, Container } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { isEmpty } from 'helpers';\nimport {\n  ExerciseContainer,\n  TitleContainer,\n  TitleLabel,\n  ExerciseInputContainer,\n  ExerciseInput,\n  ExerciseInputLabel,\n  Select,\n  MarginRight,\n} from 'components/workouts/add-workout';\n\nconst InfoContainer = styled.div`\n  padding-top: 2rem;\n`;\n\nconst WEIGHT_INPUT = 'WEIGHT_INPUT';\nconst REP_INPUT = 'REP_INPUT';\nconst SET_INPUT = 'SET_INPUT';\nconst SET_WEIGHT_TYPE = 'SET_WEIGHT_TYPE';\nconst CLEAR = 'CLEAR';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case WEIGHT_INPUT:\n      if (action.payload.match(/[^0-9]/g)) {\n        return state;\n      }\n      return { ...state, weight: action.payload };\n    case REP_INPUT:\n      if (action.payload.match(/[^0-9]/g)) {\n        return state;\n      }\n      return { ...state, reps: action.payload };\n    case SET_INPUT:\n      if (action.payload.match(/[^0-9]/g)) {\n        return state;\n      }\n      return { ...state, sets: action.payload };\n    case SET_WEIGHT_TYPE:\n      return { ...state, type: action.payload };\n    case CLEAR:\n      return { name: '', weight: '', reps: '', sets: '', type: 'kg' };\n    default:\n      return state;\n  }\n};\n\nfunction ExerciseSlidePlay(props) {\n  console.log(props);\n  const [state, dispatch] = useReducer(reducer, {\n    name: props.name,\n    weight: props.weight,\n    reps: props.reps,\n    sets: props.sets,\n    type: props.type,\n  });\n  const { name, weight, reps, sets, type } = state;\n\n  return (\n    <InfoContainer>\n      <Container>\n        <TitleContainer>\n          <TitleLabel>Exercise Name *required</TitleLabel>\n          <TitleLabel>{name}</TitleLabel>\n        </TitleContainer>\n        <ExerciseContainer>\n          <ExerciseInputContainer style={{ width: '100%' }}>\n            <ExerciseInputLabel>Weight</ExerciseInputLabel>\n            <ExerciseInput\n              type='text'\n              placeholder='weight'\n              value={weight}\n              onChange={(e) =>\n                dispatch({ type: WEIGHT_INPUT, payload: e.target.value })\n              }\n              style={{ width: '100%' }}\n            />\n            <Select\n              value={type}\n              onChange={(e) =>\n                dispatch({ type: SET_WEIGHT_TYPE, payload: e.target.value })\n              }\n              style={{ top: '2.6rem' }}\n            >\n              <option value='kg'>kg</option>\n              <option value='lb'>lb</option>\n              <option value='na'>N/A</option>\n            </Select>\n          </ExerciseInputContainer>\n          <ExerciseInputContainer style={{ width: '100%' }}>\n            <ExerciseInputLabel>Reps</ExerciseInputLabel>\n            <ExerciseInput\n              type='text'\n              placeholder='reps'\n              value={reps}\n              onChange={(e) =>\n                dispatch({ type: REP_INPUT, payload: e.target.value })\n              }\n              style={{ width: '100%' }}\n            />\n          </ExerciseInputContainer>\n          <ExerciseInputContainer style={{ width: '100%' }}>\n            <ExerciseInputLabel>Sets *required</ExerciseInputLabel>\n            <ExerciseInput\n              type='text'\n              placeholder='sets'\n              value={sets}\n              onChange={(e) =>\n                dispatch({ type: SET_INPUT, payload: e.target.value })\n              }\n              style={{ width: '100%' }}\n            />\n          </ExerciseInputContainer>\n        </ExerciseContainer>\n        <MarginRight>\n          <Button\n            variant='outline-success'\n            size='lg'\n            disabled={isEmpty(name) || isEmpty(sets)}\n            onClick={() => {\n              props.submitExercise(props.id, {\n                name,\n                weight,\n                reps,\n                sets,\n                type,\n              });\n              dispatch({ type: CLEAR });\n            }}\n          >\n            Submit Exercise\n          </Button>\n        </MarginRight>\n      </Container>\n    </InfoContainer>\n  );\n}\n\nexport { ExerciseSlidePlay };\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Container, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst InfoContainer = styled.div`\n  padding: 2rem 0;\n`;\n\nconst InfoTitle = styled.h2`\n  font-size: 2rem;\n`;\n\nconst InfoText = styled.div`\n  font-size: 1.6rem;\n`;\n\nconst WorkoutFinishedButton = styled(Link)`\n  font-size: 1.6rem;\n`;\n\nexport function WorkoutFinished(props) {\n  const { id } = props;\n  return (\n    <Container>\n      <InfoContainer>\n        <InfoTitle>Workout Complete!</InfoTitle>\n        <InfoText>\n          You have finished the workout click{' '}\n          <Link to={`/workout/${id}`}>here</Link> to view your progress\n        </InfoText>\n      </InfoContainer>\n      <Button as={WorkoutFinishedButton} to='/dashboard'>\n        Dashboard\n      </Button>\n    </Container>\n  );\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport qs from 'query-string';\nimport {\n  StartContainer,\n  ExerciseSlide,\n  ExerciseSlideView,\n  Title,\n  OptionsContainer,\n  OptionButton,\n  QSContainer,\n} from 'components/quick-start';\nimport { addExercise, getWorkout, submitWorkout } from 'actions';\nimport { isEmpty } from 'helpers';\n\nclass QuickStartWorkout extends Component {\n  state = {\n    currentExercise: 0,\n    error: {},\n  };\n\n  componentDidMount() {\n    const { exercise } = qs.parse(this.props.location.search);\n    this.props.getWorkout(this.props.match.params.id);\n    this.setState({\n      currentExercise: Number(exercise),\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { submitted, _id } = nextProps.workout;\n    if (this.props.location.search !== nextProps.location.search) {\n      const { exercise } = qs.parse(nextProps.location.search);\n      console.log(exercise);\n      this.setState({\n        currentExercise: Number(exercise),\n      });\n    }\n    if (submitted) {\n      this.props.history.push(`/workout/${_id}`);\n    }\n    return true;\n  }\n\n  handleStandardChange = (e) =>\n    this.setState({ [e.target.name]: e.target.value });\n\n  submitExercise = (name, weight, reps, sets, type) => {\n    this.props.addExercise(\n      this.props.match.params.id,\n      name,\n      weight,\n      reps,\n      sets,\n      type\n    );\n  };\n\n  render() {\n    const { currentExercise } = this.state;\n    const { name, exercises, _id } = this.props.workout;\n\n    return (\n      <StartContainer>\n        <QSContainer>\n          <Title>{name}</Title>\n          {!isEmpty(exercises) && currentExercise !== exercises.length ? (\n            exercises.map((ex, index) => {\n              if (index === currentExercise) {\n                return <ExerciseSlideView name={ex.name} {...ex.inputs[0]} />;\n              }\n            })\n          ) : (\n            <ExerciseSlide submitExercise={this.submitExercise} />\n          )}\n\n          <OptionsContainer>\n            {currentExercise > 0 && (\n              <Button\n                to={`/quick-start/workout/${_id}?exercise=${\n                  currentExercise - 1\n                }`}\n                as={OptionButton}\n                variant='secondary'\n              >\n                Previous\n              </Button>\n            )}\n            {exercises && currentExercise < exercises.length && (\n              <Button\n                to={`/quick-start/workout/${_id}?exercise=${\n                  currentExercise + 1\n                }`}\n                as={OptionButton}\n                variant='secondary'\n              >\n                Next\n              </Button>\n            )}\n          </OptionsContainer>\n          {exercises && exercises.length > 0 && (\n            <OptionsContainer>\n              <Button\n                onClick={() => this.props.submitWorkout(_id)}\n                variant='outline-success'\n                style={{\n                  marginBottom: '2rem',\n                  fontSize: '1.6rem',\n                  padding: '0.5rem 2rem',\n                }}\n              >\n                Workout Finished\n              </Button>\n            </OptionsContainer>\n          )}\n        </QSContainer>\n      </StartContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  quickstart: state.quickstart,\n  workout: state.workout.workout,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getWorkout: (id) => dispatch(getWorkout(id)),\n  addExercise: (workout_id, name, weight, sets, reps, type, date) =>\n    dispatch(addExercise(workout_id, name, weight, sets, reps, type, date)),\n  submitWorkout: (id) => dispatch(submitWorkout(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuickStartWorkout);\n"],"sourceRoot":""}