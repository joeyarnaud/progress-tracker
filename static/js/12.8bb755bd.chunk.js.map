{"version":3,"sources":["components/common/buttons/EllipsesDropdown.js","components/common/buttons/common.js","components/exercise/exercise-charts/ExerciseChart.js","pages/Exercise.js"],"names":["Button","styled","button","CustomToggle","React","forwardRef","ref","children","onClick","e","preventDefault","className","style","labeledBy","useState","value","setValue","aria-labelledby","FormControl","autoFocus","placeholder","onChange","target","Children","toArray","filter","child","props","toLowerCase","startsWith","BlankButton","QuickStartButton","Link","theme","colors","colorDark","colorWhite","OptionButton","ChartsContainer","div","ChartContainer","ChartTitle","h3","ExerciseChart","inputs","console","log","VictoryTheme","material","isEmpty","data","stroke","parent","border","animate","duration","onLoad","map","input","x","moment","date","format","y","weight","reps","dependentAxis","fixLabelOverlap","sets","Exercise","state","edit","title","changeExerciseName","changeName","exercise","_id","setState","toggleNameEdit","prevState","handleStandardChange","name","id","this","match","params","getExercise","nextProps","nextState","clearExercise","deleted","to","Container","display","marginTop","type","marginLeft","variant","flexDirection","action","addInput","buttonText","size","Dropdown","marginRight","Toggle","as","Menu","Item","eventKey","deleteExercise","warningText","deleteInput","key","Component","connect","dispatch","input_id"],"mappings":"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","file":"static/js/12.8bb755bd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { FormControl } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  border: none;\n  font-size: 2rem;\n  margin-top: 1.5rem;\n  background-color: inherit;\n`;\n\n// The forwardRef is important!!\n// Dropdown needs access to the DOM node in order to position the Menu\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n  <Button\n    ref={ref}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n    <i className='fas fa-ellipsis-h'></i>\n  </Button>\n));\n\n// forwardRef again here!\n// Dropdown needs access to the DOM of the Menu to measure it\nconst CustomMenu = React.forwardRef(\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n    const [value, setValue] = useState('');\n\n    return (\n      <div\n        ref={ref}\n        style={style}\n        className={className}\n        aria-labelledby={labeledBy}\n      >\n        <FormControl\n          autoFocus\n          className='mx-3 my-2 w-auto'\n          placeholder='Type to filter...'\n          onChange={(e) => setValue(e.target.value)}\n          value={value}\n        />\n        <ul className='list-unstyled'>\n          {React.Children.toArray(children).filter(\n            (child) =>\n              !value || child.props.children.toLowerCase().startsWith(value)\n          )}\n        </ul>\n      </div>\n    );\n  }\n);\n\nexport { CustomToggle, CustomMenu };\n\n// render(\n//   <Dropdown>\n//     <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\n//       Custom toggle\n//     </Dropdown.Toggle>\n\n//     <Dropdown.Menu as={CustomMenu}>\n//       <Dropdown.Item eventKey=\"1\">Red</Dropdown.Item>\n//       <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\n//       <Dropdown.Item eventKey=\"3\" active>\n//         Orange\n//       </Dropdown.Item>\n//       <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item>\n//     </Dropdown.Menu>\n//   </Dropdown>,\n// );\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BlankButton = styled.button`\n  border: none;\n  background: inherit;\n`;\n\nexport const QuickStartButton = styled(Link)`\n  display: inline-block;\n  background-color: ${(props) => props.theme.colors.colorDark};\n  color: ${(props) => props.theme.colors.colorWhite};\n  width: 100%;\n  font-size: 3rem;\n  text-align: center;\n  border-radius: 10px;\n  padding: 4rem;\n  margin-top: 2rem;\n\n  &:hover {\n    text-decoration: none;\n    color: ${(props) => props.theme.colors.colorWhite};\n  }\n`;\n\nexport const OptionButton = styled(Link)`\n  display: inline-block;\n  background-color: ${(props) => props.theme.colors.colorDark};\n  color: ${(props) => props.theme.colors.colorWhite};\n  font-size: 3rem;\n  text-align: center;\n  border-radius: 10px;\n  margin: 1rem 0;\n  padding: 4rem;\n  width: calc(50% - 0.5rem);\n\n  &:hover {\n    text-decoration: none;\n    color: ${(props) => props.theme.colors.colorWhite};\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  VictoryLine,\n  VictoryChart,\n  VictoryTheme,\n  VictoryContainer,\n  VictoryAxis,\n} from 'victory';\nimport moment from 'moment';\nimport { isEmpty } from 'helpers';\n\nconst ChartsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst ChartContainer = styled.div`\n  height: 40rem;\n  position: relative;\n  width: 40rem;\n`;\n\nconst ChartTitle = styled.h3`\n  position: absolute;\n  top: 2rem;\n  left: 50%;\n  transform: translateX(-50%);\n`;\n\nfunction ExerciseChart(props) {\n  const { inputs } = props;\n  console.log(inputs);\n  return (\n    <ChartsContainer>\n      <ChartContainer>\n        <ChartTitle>1RM (calculated) vs Time</ChartTitle>\n        <VictoryChart theme={VictoryTheme.material}>\n          {!isEmpty(inputs) && (\n            <VictoryLine\n              style={{\n                data: { stroke: '#c43a31' },\n                parent: {\n                  border: '1px solid #ccc',\n                },\n              }}\n              animate={{\n                duration: 2000,\n                onLoad: { duration: 1000 },\n              }}\n              data={inputs.map((input) => ({\n                x: moment(input.date).format('DD/MM'),\n                y: input.weight / (1.0278 - 0.0278 * input.reps),\n              }))}\n            />\n          )}\n          <VictoryAxis dependentAxis fixLabelOverlap />\n          <VictoryAxis fixLabelOverlap />\n        </VictoryChart>\n      </ChartContainer>\n      <ChartContainer>\n        <ChartTitle>Total weight moved vs Time</ChartTitle>\n        <VictoryChart theme={VictoryTheme.material}>\n          {!isEmpty(inputs) && (\n            <VictoryLine\n              style={{\n                data: { stroke: '#c43a31' },\n                parent: {\n                  border: '1px solid #ccc',\n                },\n              }}\n              animate={{\n                duration: 2000,\n                onLoad: { duration: 1000 },\n              }}\n              data={inputs.map((input) => ({\n                x: moment(input.date).format('DD/MM'),\n                y: input.weight * input.reps * input.sets,\n              }))}\n            />\n          )}\n          <VictoryAxis dependentAxis />\n          <VictoryAxis fixLabelOverlap />\n        </VictoryChart>\n      </ChartContainer>\n      <ChartContainer>\n        <ChartTitle>Reps, Sets, Weight vs Time</ChartTitle>\n        <VictoryChart theme={VictoryTheme.material}>\n          {!isEmpty(inputs) && (\n            <VictoryLine\n              style={{\n                data: { stroke: '#c43a31' },\n                parent: {\n                  border: '1px solid #ccc',\n                },\n              }}\n              animate={{\n                duration: 2000,\n                onLoad: { duration: 1000 },\n              }}\n              data={inputs.map((input) => ({\n                x: moment(input.date).format('DD/MM'),\n                y: input.weight,\n              }))}\n            />\n          )}\n          {!isEmpty(inputs) && (\n            <VictoryLine\n              style={{\n                data: { stroke: '#c43a31' },\n                parent: {\n                  border: '1px solid purple',\n                },\n              }}\n              animate={{\n                duration: 2000,\n                onLoad: { duration: 1000 },\n              }}\n              data={inputs.map((input) => ({\n                x: moment(input.date).format('DD/MM'),\n                y: input.reps * input.sets,\n              }))}\n            />\n          )}\n          {!isEmpty(inputs) && (\n            <VictoryLine\n              style={{\n                data: { stroke: '#c43a31' },\n                parent: {\n                  border: '1px solid blue',\n                },\n              }}\n              animate={{\n                duration: 2000,\n                onLoad: { duration: 1000 },\n              }}\n              data={inputs.map((input) => ({\n                x: moment(input.date).format('DD/MM'),\n                y: input.sets,\n              }))}\n            />\n          )}\n          <VictoryAxis dependentAxis />\n          <VictoryAxis fixLabelOverlap />\n        </VictoryChart>\n      </ChartContainer>\n    </ChartsContainer>\n  );\n}\n\nexport default ExerciseChart;\n","import React, { Component } from 'react';\nimport { Container, Dropdown, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\nimport {\n  getExercise,\n  deleteInput,\n  addInput,\n  deleteExercise,\n  clearExercise,\n  changeExerciseName,\n} from 'actions';\nimport { isEmpty } from 'helpers';\nimport {\n  TitleContainer,\n  TitleInput,\n} from 'components/workouts/add-workout/common';\nimport ExerciseChart from 'components/exercise/exercise-charts/ExerciseChart';\nimport { Title4, FlexBoxBetween } from 'components/common/styled-components';\nimport { CustomToggle, BlankButton } from 'components/common/buttons';\nimport { WarningModal, AddInputModal } from 'components/common/modals';\nimport { InputSummary } from 'components/common/summary';\n\nclass Exercise extends Component {\n  state = {\n    edit: false,\n    title: '',\n  };\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.getExercise(id);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      !isEmpty(nextProps.exercise.exercise) &&\n      isEmpty(this.props.exercise.exercise)\n    ) {\n      console.log('here');\n      this.setState({ title: nextProps.exercise.exercise.name });\n    }\n    return true;\n  }\n\n  componentWillUnmount() {\n    this.props.clearExercise();\n  }\n\n  changeExerciseName = (e) => {\n    this.props.changeName(this.state.title, this.props.exercise.exercise._id);\n    this.setState({ edit: false });\n  };\n\n  toggleNameEdit = () =>\n    this.setState((prevState) => ({ edit: !prevState.edit }));\n\n  handleStandardChange = (e) =>\n    this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { exercise } = this.props;\n    const { date, inputs, name, _id, deleted } = exercise.exercise;\n    const { edit, title } = this.state;\n\n    return deleted ? (\n      <Redirect to='/' />\n    ) : (\n      <Container>\n        <FlexBoxBetween>\n          {edit ? (\n            <TitleContainer style={{ display: 'flex', marginTop: '1rem' }}>\n              <TitleInput\n                type='text'\n                placeholder='Workout Name'\n                name='title'\n                value={title}\n                onChange={this.handleStandardChange}\n              />\n              <Button\n                style={{ marginLeft: '1rem' }}\n                onClick={this.changeExerciseName}\n                variant='success'\n              >\n                Submit\n              </Button>\n              <Button\n                style={{ marginLeft: '1rem' }}\n                variant='secondary'\n                onClick={this.toggleNameEdit}\n              >\n                Cancel\n              </Button>\n            </TitleContainer>\n          ) : (\n            <Title4>{name}</Title4>\n          )}\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n            }}\n          >\n            <AddInputModal\n              name={name}\n              id={_id}\n              action={this.props.addInput}\n              buttonText='Add Input'\n              size='1.6rem'\n            />\n            <Dropdown style={{ display: 'inherit', marginRight: '3rem' }}>\n              <Dropdown.Toggle\n                as={CustomToggle}\n                id='workout-options'\n              ></Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item eventKey='1'>\n                  <WarningModal\n                    name={name}\n                    id={_id}\n                    action={this.props.deleteExercise}\n                    warningText='Delete Exercise'\n                    size='1rem'\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item eventKey='2'>\n                  <BlankButton onClick={this.toggleNameEdit}>\n                    <i className='fas fa-edit'></i> Change Name\n                  </BlankButton>\n                </Dropdown.Item>\n                <Dropdown.Item eventKey='2'></Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n            <Title4>{moment(date).format('DD/MM/yyyy')}</Title4>\n          </div>\n        </FlexBoxBetween>\n        <ExerciseChart inputs={inputs} />\n        {!isEmpty(inputs) &&\n          inputs.map((input) => {\n            return (\n              <InputSummary\n                date={input.date}\n                reps={input.reps}\n                sets={input.sets}\n                type={input.type}\n                weight={input.weight}\n                deleteInput={() => this.props.deleteInput(_id, input._id)}\n                id={input._id}\n                key={'input-summary-' + input._id}\n              />\n            );\n          })}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  exercise: state.exercise,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getExercise: (id) => dispatch(getExercise(id)),\n  deleteInput: (id, input_id) => dispatch(deleteInput(id, input_id)),\n  addInput: (id, input) => dispatch(addInput(id, input)),\n  deleteExercise: (id) => dispatch(deleteExercise(id)),\n  clearExercise: () => dispatch(clearExercise()),\n  changeName: (title, id) => dispatch(changeExerciseName(title, id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Exercise);\n"],"sourceRoot":""}