{"version":3,"sources":["components/common/buttons/EllipsesDropdown.js","components/common/buttons/common.js","pages/Workout.js"],"names":["Button","styled","button","CustomToggle","React","forwardRef","ref","children","onClick","e","preventDefault","className","style","labeledBy","useState","value","setValue","aria-labelledby","FormControl","autoFocus","placeholder","onChange","target","Children","toArray","filter","child","props","toLowerCase","startsWith","BlankButton","QuickStartButton","Link","theme","colors","colorDark","colorWhite","OptionButton","Workout","state","edit","title","changeWorkoutName","changeName","workout","_id","setState","toggleNameEdit","prevState","handleStandardChange","name","id","this","match","params","getWorkout","clearWorkout","nextProps","nextState","isEmpty","console","log","date","exercises","deleted","to","display","marginTop","type","variant","flexDirection","action","addExercise","buttonText","size","marginRight","Toggle","as","Menu","Item","eventKey","deleteWorkout","warningText","moment","format","marginBottom","map","exercise","inputs","deleteExercise","Component","connect","dispatch","workout_id","weight","sets","reps"],"mappings":"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","file":"static/js/13.aa4d6088.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { FormControl } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  border: none;\n  font-size: 2rem;\n  margin-top: 1.5rem;\n  background-color: inherit;\n`;\n\n// The forwardRef is important!!\n// Dropdown needs access to the DOM node in order to position the Menu\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n  <Button\n    ref={ref}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n    <i className='fas fa-ellipsis-h'></i>\n  </Button>\n));\n\n// forwardRef again here!\n// Dropdown needs access to the DOM of the Menu to measure it\nconst CustomMenu = React.forwardRef(\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n    const [value, setValue] = useState('');\n\n    return (\n      <div\n        ref={ref}\n        style={style}\n        className={className}\n        aria-labelledby={labeledBy}\n      >\n        <FormControl\n          autoFocus\n          className='mx-3 my-2 w-auto'\n          placeholder='Type to filter...'\n          onChange={(e) => setValue(e.target.value)}\n          value={value}\n        />\n        <ul className='list-unstyled'>\n          {React.Children.toArray(children).filter(\n            (child) =>\n              !value || child.props.children.toLowerCase().startsWith(value)\n          )}\n        </ul>\n      </div>\n    );\n  }\n);\n\nexport { CustomToggle, CustomMenu };\n\n// render(\n//   <Dropdown>\n//     <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\n//       Custom toggle\n//     </Dropdown.Toggle>\n\n//     <Dropdown.Menu as={CustomMenu}>\n//       <Dropdown.Item eventKey=\"1\">Red</Dropdown.Item>\n//       <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\n//       <Dropdown.Item eventKey=\"3\" active>\n//         Orange\n//       </Dropdown.Item>\n//       <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item>\n//     </Dropdown.Menu>\n//   </Dropdown>,\n// );\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BlankButton = styled.button`\n  border: none;\n  background: inherit;\n`;\n\nexport const QuickStartButton = styled(Link)`\n  display: inline-block;\n  background-color: ${(props) => props.theme.colors.colorDark};\n  color: ${(props) => props.theme.colors.colorWhite};\n  width: 100%;\n  font-size: 3rem;\n  text-align: center;\n  border-radius: 10px;\n  padding: 4rem;\n  margin-top: 2rem;\n\n  &:hover {\n    text-decoration: none;\n    color: ${(props) => props.theme.colors.colorWhite};\n  }\n`;\n\nexport const OptionButton = styled(Link)`\n  display: inline-block;\n  background-color: ${(props) => props.theme.colors.colorDark};\n  color: ${(props) => props.theme.colors.colorWhite};\n  font-size: 3rem;\n  text-align: center;\n  border-radius: 10px;\n  margin: 1rem 0;\n  padding: 4rem;\n  width: calc(50% - 0.5rem);\n\n  &:hover {\n    text-decoration: none;\n    color: ${(props) => props.theme.colors.colorWhite};\n  }\n`;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Container, Dropdown, Button } from 'react-bootstrap';\nimport moment from 'moment';\nimport {\n  getWorkout,\n  deleteExercise,\n  deleteWorkout,\n  clearWorkout,\n  addExercise,\n  changeName,\n} from 'actions';\nimport {\n  TitleContainer,\n  TitleInput,\n} from 'components/workouts/add-workout/common';\nimport { Title4, FlexBoxBetween } from 'components/common/styled-components';\nimport { ExerciseSummary } from 'components/common/summary';\nimport {\n  CustomToggle,\n  BlankButton,\n  QuickStartButton,\n} from 'components/common/buttons';\nimport { WarningModal, AddExerciseModal } from 'components/common/modals';\nimport { isEmpty } from 'helpers';\n\nclass Workout extends Component {\n  state = {\n    edit: false,\n    title: '',\n  };\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.getWorkout(id);\n  }\n\n  componentWillUnmount() {\n    this.props.clearWorkout();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (!isEmpty(nextProps.workout) && isEmpty(this.props.workout)) {\n      console.log('here');\n      this.setState({ title: nextProps.workout.name });\n    }\n    return true;\n  }\n\n  changeWorkoutName = (e) => {\n    this.props.changeName(this.state.title, this.props.workout._id);\n    this.setState({ edit: false });\n  };\n\n  toggleNameEdit = () =>\n    this.setState((prevState) => ({ edit: !prevState.edit }));\n\n  handleStandardChange = (e) =>\n    this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { workout } = this.props;\n    const { date, exercises, name, _id, deleted } = workout;\n    const { edit, title } = this.state;\n\n    return deleted ? (\n      <Redirect to='/workouts' />\n    ) : (\n      <Container>\n        <FlexBoxBetween>\n          {edit ? (\n            <TitleContainer style={{ display: 'flex', marginTop: '1rem' }}>\n              <TitleInput\n                type='text'\n                placeholder='Workout Name'\n                name='title'\n                value={title}\n                onChange={this.handleStandardChange}\n              />\n              <Button onClick={this.changeWorkoutName} variant='success'>\n                Submit\n              </Button>\n            </TitleContainer>\n          ) : (\n            <Title4>{name}</Title4>\n          )}\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n            }}\n          >\n            <AddExerciseModal\n              name={name}\n              id={_id}\n              action={this.props.addExercise}\n              buttonText='Add Exercise'\n              size='1.6rem'\n            />\n            <Dropdown style={{ display: 'inherit', marginRight: '3rem' }}>\n              <Dropdown.Toggle\n                as={CustomToggle}\n                id='workout-options'\n              ></Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item eventKey='1'>\n                  <WarningModal\n                    name={name}\n                    id={_id}\n                    action={this.props.deleteWorkout}\n                    warningText='Delete Workout'\n                    size='1rem'\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item eventKey='2'>\n                  <BlankButton onClick={this.toggleNameEdit}>\n                    <i className='fas fa-edit'></i> Change Name\n                  </BlankButton>\n                </Dropdown.Item>\n                <Dropdown.Item eventKey='2'></Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n            <Title4>{moment(date).format('DD/MM/yyyy')}</Title4>\n          </div>\n        </FlexBoxBetween>\n        <Container>\n          <QuickStartButton\n            to={`/workout/play/${_id}?exercise=0`}\n            style={{ marginBottom: '2rem' }}\n          >\n            Start Workout <i className='fas fa-play-circle'></i>\n          </QuickStartButton>\n          {exercises &&\n            exercises.map((exercise) => {\n              return (\n                <ExerciseSummary\n                  date={exercise.date}\n                  inputs={exercise.inputs[0]}\n                  name={exercise.name}\n                  id={exercise._id}\n                  deleteExercise={this.props.deleteExercise}\n                />\n              );\n            })}\n        </Container>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  workout: state.workout.workout,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getWorkout: (id) => dispatch(getWorkout(id)),\n  deleteExercise: (id) => dispatch(deleteExercise(id)),\n  clearWorkout: () => dispatch(clearWorkout()),\n  deleteWorkout: (id) => dispatch(deleteWorkout(id)),\n  addExercise: (workout_id, name, weight, sets, reps, type, date) =>\n    dispatch(addExercise(workout_id, name, weight, sets, reps, type, date)),\n  changeName: (name, id) => dispatch(changeName(name, id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Workout);\n"],"sourceRoot":""}