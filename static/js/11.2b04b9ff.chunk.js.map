{"version":3,"sources":["components/common/styled-components/text.js","components/common/styled-components/container.js","components/common/styled-components/button.js","components/workouts/add-workout/ExerciseDisplay.js","components/workouts/add-workout/ExerciseCreate.js","components/workouts/add-workout/common.js","pages/AddWorkout.js"],"names":["Title1","styled","h1","props","theme","fontStyles","boldest","colors","colorWhite","Title2","h2","Title4","colorDark","FlexBoxBetween","div","FlexBox","FlexBoxCenter","TitleContainer","AdderButton","Link","colorSuccess","DisplayContainer","ExerciseContainer","InfoSegment","ExerciseDisplay","name","weight","reps","sets","weightType","console","log","defaultProps","reducer","state","action","type","payload","match","date","ExerciseCreate","exercise","handleSubmit","cancelExercise","useReducer","Date","dispatch","placeholder","value","onChange","e","target","maxDate","Button","variant","size","disabled","isEmpty","onClick","submitted","Form","Group","TitleLabel","Label","TitleInput","Control","ExerciseInputContainer","ExerciseInputLabel","ExerciseInput","Container","MarginRight","Select","select","Title","SubmitWorkoutButton","exercises","title","slice","length","connect","workout","postWorkout","clearWorkout","map","index","key","className","style","marginTop","to","_id"],"mappings":"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","file":"static/js/11.2b04b9ff.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Title1 = styled.h1`\n  font-size: 4rem;\n  font-family: ${(props) => props.theme.fontStyles.boldest};\n  text-align: center;\n  color: ${(props) => props.theme.colors.colorWhite};\n`;\n\nexport const Title2 = styled.h2`\n  font-size: 3.5rem;\n  font-family: ${(props) => props.theme.fontStyles.boldest};\n`;\n\nexport const Title4 = styled.h2`\n  color: ${(props) => props.theme.colors.colorDark};\n  margin-top: 2rem;\n  font-size: 2rem;\n`;\n","import styled from 'styled-components';\n\nexport const FlexBoxBetween = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\n\nexport const FlexBox = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const FlexBoxCenter = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin: 2rem 0;\n`;\n\nexport const PerfectCenter = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const AdderButton = styled(Link)`\n  color: ${(props) => props.theme.colors.colorSuccess};\n  font-size: 3.5rem;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { ExerciseContainer } from './common';\n\nconst DisplayContainer = styled(ExerciseContainer)`\n  background-color: ${(props) => props.theme.colors.colorWhite};\n  border-radius: 10px;\n  padding: 1rem;\n  margin-bottom: 2rem;\n`;\n\nconst InfoSegment = styled.div`\n  font-size: 1.4rem;\n`;\n\nfunction ExerciseDisplay(props) {\n  const { name, weight, reps, sets, weightType } = props;\n  console.log(props);\n  return (\n    <DisplayContainer>\n      <InfoSegment>Exercise Name: {name}</InfoSegment>\n      <InfoSegment>\n        Weight: {weight}\n        {weightType}\n      </InfoSegment>\n      <InfoSegment>Reps: {reps}</InfoSegment>\n      <InfoSegment>Sets: {sets}</InfoSegment>\n    </DisplayContainer>\n  );\n}\n\nExerciseDisplay.defaultProps = {\n  weightType: 'kg',\n};\n\nExerciseDisplay.propTypes = {\n  name: PropTypes.string.isRequired,\n  weight: PropTypes.number.isRequired,\n  reps: PropTypes.number.isRequired,\n  sets: PropTypes.number.isRequired,\n  weightType: PropTypes.string.isRequired,\n};\n\nexport { ExerciseDisplay };\n","import React, { useReducer } from 'react';\nimport { Button } from 'react-bootstrap';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { isEmpty } from 'helpers';\nimport {\n  ExerciseContainer,\n  TitleContainer,\n  TitleLabel,\n  TitleInput,\n  Container,\n  ExerciseInputContainer,\n  ExerciseInput,\n  ExerciseInputLabel,\n  Select,\n  MarginRight,\n} from './common';\nimport { FlexBox } from 'components/common/styled-components';\n\nconst TITLE_INPUT = 'TITLE_INPUT';\nconst WEIGHT_INPUT = 'WEIGHT_INPUT';\nconst REP_INPUT = 'REP_INPUT';\nconst SET_INPUT = 'SET_INPUT';\nconst CHANGE_DATE = 'CHANGE_DATE';\nconst SET_WEIGHT_TYPE = 'SET_WEIGHT_TYPE';\n\nconst reducer = (state, action) => {\n  console.log(action);\n  switch (action.type) {\n    case TITLE_INPUT:\n      return { ...state, name: action.payload };\n    case WEIGHT_INPUT:\n      if (action.payload.match(/[^0-9]/g)) {\n        return state;\n      }\n      return { ...state, weight: action.payload };\n    case REP_INPUT:\n      if (action.payload.match(/[^0-9]/g)) {\n        return state;\n      }\n      return { ...state, reps: action.payload };\n    case SET_INPUT:\n      if (action.payload.match(/[^0-9]/g)) {\n        return state;\n      }\n      return { ...state, sets: action.payload };\n    case CHANGE_DATE:\n      return { ...state, date: action.payload };\n    case SET_WEIGHT_TYPE:\n      return { ...state, type: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport function ExerciseCreate(props) {\n  const { exercise, handleSubmit, cancelExercise } = props;\n  const [state, dispatch] = useReducer(reducer, {\n    ...exercise,\n    type: 'kg',\n    date: new Date(),\n  });\n  const { name, weight, reps, sets, type, date } = state;\n  console.log(state);\n  return (\n    <Container>\n      <TitleContainer>\n        <TitleLabel>Exercise Name *required</TitleLabel>\n        <TitleInput\n          type='text'\n          placeholder='Exercise Name'\n          value={name}\n          onChange={(e) =>\n            dispatch({ type: TITLE_INPUT, payload: e.target.value })\n          }\n        />\n      </TitleContainer>\n      <ExerciseContainer>\n        <ExerciseInputContainer>\n          <ExerciseInputLabel>Weight</ExerciseInputLabel>\n          <ExerciseInput\n            type='text'\n            placeholder='weight'\n            value={weight}\n            onChange={(e) =>\n              dispatch({ type: WEIGHT_INPUT, payload: e.target.value })\n            }\n          />\n          <Select\n            value={type}\n            onChange={(e) =>\n              dispatch({ type: SET_WEIGHT_TYPE, payload: e.target.value })\n            }\n          >\n            <option value='kg'>kg</option>\n            <option value='lb'>lb</option>\n            <option value='na'>N/A</option>\n          </Select>\n        </ExerciseInputContainer>\n        <ExerciseInputContainer>\n          <ExerciseInputLabel>Reps</ExerciseInputLabel>\n          <ExerciseInput\n            type='text'\n            placeholder='reps'\n            value={reps}\n            onChange={(e) =>\n              dispatch({ type: REP_INPUT, payload: e.target.value })\n            }\n          />\n        </ExerciseInputContainer>\n        <ExerciseInputContainer>\n          <ExerciseInputLabel>Sets *required</ExerciseInputLabel>\n          <ExerciseInput\n            type='text'\n            placeholder='sets'\n            value={sets}\n            onChange={(e) =>\n              dispatch({ type: SET_INPUT, payload: e.target.value })\n            }\n          />\n        </ExerciseInputContainer>\n        <ExerciseInputContainer>\n          <Calendar\n            onChange={(date) => dispatch({ type: CHANGE_DATE, payload: date })}\n            value={date}\n            maxDate={new Date()}\n          />\n        </ExerciseInputContainer>\n      </ExerciseContainer>\n      <FlexBox>\n        <MarginRight>\n          <Button\n            variant='outline-success'\n            size='lg'\n            disabled={isEmpty(name) || isEmpty(sets)}\n            onClick={() =>\n              handleSubmit({\n                name,\n                weight,\n                reps,\n                sets,\n                type: type,\n                submitted: true,\n                date,\n              })\n            }\n          >\n            Submit\n          </Button>\n        </MarginRight>\n\n        <Button variant='danger' size='lg' onClick={() => cancelExercise()}>\n          Cancel\n        </Button>\n      </FlexBox>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport { Form } from 'react-bootstrap';\n\nexport const ExerciseContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nexport const TitleContainer = styled(Form.Group)``;\n\nexport const TitleLabel = styled(Form.Label)`\n  font-size: 1.6rem;\n`;\n\nexport const TitleInput = styled(Form.Control)`\n  font-size: 1.6rem;\n`;\n\nexport const ExerciseInputContainer = styled(Form.Group)`\n  position: relative;\n  width: 100%;\n`;\n\nexport const ExerciseInputLabel = styled(Form.Label)`\n  font-size: 1.4rem;\n`;\n\nexport const ExerciseInput = styled(Form.Control)`\n  width: 28rem;\n  font-size: 1.6rem;\n  width: 100%;\n`;\n\nexport const Container = styled.div`\n  font-size: 1.6rem;\n  margin-bottom: 2rem;\n`;\n\nexport const MarginRight = styled.div`\n  margin-right: 2rem;\n  /* display: inline; */\n`;\n\nexport const Select = styled.select`\n  position: absolute;\n  top: 3rem;\n  right: 0;\n  height: 3.2rem;\n`;\n","import React, { useReducer } from 'react';\nimport { Container, Button } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport {\n  ExerciseDisplay,\n  ExerciseCreate,\n} from 'components/workouts/add-workout';\nimport { isEmpty } from 'helpers';\nimport {\n  TitleContainer,\n  TitleLabel,\n  TitleInput,\n} from 'components/workouts/add-workout/common';\nimport { postWorkout, clearWorkout } from 'actions';\n\nconst Title = styled.h2`\n  font-size: 3rem;\n  margin: 2rem 0;\n  color: ${(props) => props.theme.colors.colorSuccess};\n`;\n\nconst SubmitWorkoutButton = styled(Button)`\n  font-size: 1.6rem;\n  padding: 1rem 5rem;\n`;\n\nconst ADD_EXERCISE = 'ADD_EXERCISE';\nconst SUBMIT_EXERCISE = 'SUBMIT_EXERCISE';\nconst CANCEL_LAST_EXERCISE = 'CANCEL_LAST_EXERCISE';\nconst TITLE_INPUT = 'TITLE_INPUT';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ADD_EXERCISE:\n      return {\n        ...state,\n        exercises: [\n          ...state.exercises,\n          {\n            title: '',\n            weight: '',\n            sets: '',\n            reps: '',\n            type: 'kg',\n            submitted: false,\n          },\n        ],\n      };\n    case SUBMIT_EXERCISE:\n      return {\n        ...state,\n        exercises: [\n          ...state.exercises.slice(0, state.exercises.length - 1),\n          action.payload,\n        ],\n      };\n    case CANCEL_LAST_EXERCISE:\n      return {\n        ...state,\n        exercises: [...state.exercises.slice(0, state.exercises.length - 1)],\n      };\n    case TITLE_INPUT:\n      return {\n        ...state,\n        title: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nfunction AddWorkout(props) {\n  const [state, dispatch] = useReducer(reducer, { exercises: [], title: '' });\n  const { exercises, title } = state;\n  const { workout } = props;\n\n  if (!isEmpty(workout)) {\n    props.clearWorkout();\n  }\n\n  return isEmpty(workout) ? (\n    <Container>\n      <Title>Add Workout</Title>\n      <TitleContainer>\n        <TitleLabel>Workout Name *required</TitleLabel>\n        <TitleInput\n          type='text'\n          placeholder='Workout Name'\n          value={title}\n          onChange={(e) =>\n            dispatch({ type: TITLE_INPUT, payload: e.target.value })\n          }\n        />\n      </TitleContainer>\n      <Container>\n        {exercises &&\n          exercises.map((exercise, index) => {\n            return exercise.submitted ? (\n              <ExerciseDisplay key={index} {...exercise} />\n            ) : (\n              <ExerciseCreate\n                exercise={exercise}\n                handleSubmit={(exercise) =>\n                  dispatch({ type: SUBMIT_EXERCISE, payload: exercise })\n                }\n                cancelExercise={() => dispatch({ type: CANCEL_LAST_EXERCISE })}\n                key={index}\n              />\n            );\n          })}\n      </Container>\n\n      {(isEmpty(exercises) || exercises[exercises.length - 1].submitted) && (\n        <Button\n          variant='success'\n          onClick={() => dispatch({ type: ADD_EXERCISE })}\n        >\n          <i className='fas fa-plus-circle'></i> Add Exercise\n        </Button>\n      )}\n      <div style={{ marginTop: '2rem' }}>\n        {(isEmpty(exercises) || exercises[exercises.length - 1].submitted) &&\n          exercises.length > 0 && (\n            <SubmitWorkoutButton\n              onClick={() => props.postWorkout(title, exercises)}\n              variant='outline-primary'\n            >\n              Submit Workout\n            </SubmitWorkoutButton>\n          )}\n      </div>\n    </Container>\n  ) : (\n    <Redirect to={`/workout/${workout._id}`} />\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  workout: state.workout.workout,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  postWorkout: (title, exercises) => dispatch(postWorkout(title, exercises)),\n  clearWorkout: () => dispatch(clearWorkout()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddWorkout);\n"],"sourceRoot":""}